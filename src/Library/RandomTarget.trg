{
  "Id": 50332075,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "library RandomTargetLib requires UnitstLib, Conditions\r\n\r\n    globals\r\n        constant integer RT_ORGANIC \t\t= 1\r\n        constant integer RT_NOT_CASTER \t\t= 2\r\n        constant integer RT_MINION \t\t\t= 3\r\n        constant integer RT_HERO \t\t\t= 4\r\n        constant integer RT_NOT_FULL_HEALTH = 5\r\n        constant integer RT_VULNERABLE \t\t= 6\r\n        constant integer RT_CAN_MOVE \t\t= 7\r\n        constant integer RT_NOT_PROVOKED \t= 8\r\n        \r\n        private constant integer CHECK_TYPES = 9\r\n        \r\n        //private integer array RandomTargetTypes[PROVOKE_TYPES_COUNT]\r\n        \r\n        private unit TempUnit = null\r\n    endglobals\r\n    \r\n    private struct ProvokeTypes\r\n        boolean array isTypeActive[CHECK_TYPES]\r\n        \r\n        method onDestroy takes nothing returns nothing\r\n\t        local integer i = 0\r\n\t        \r\n\t        loop\r\n\t        \texitwhen i > 8\r\n\t        \tset isTypeActive[i] = false\r\n\t        \tset i = i + 1\r\n\t    \tendloop\r\n\t    endmethod\r\n    endstruct\r\n    \r\n    private function IsCanBeTarget takes unit caster, unit target, ProvokeTypes provokeTypes returns boolean\r\n        local boolean isWork = true\r\n\r\n    \t//call BJDebugMsg(\"caster: \" + GetUnitName(target))\r\n    \t//call BJDebugMsg(\"target: \" + GetUnitName(target))\r\n    \tif IsUnitType( target, UNIT_TYPE_FLYING) then\r\n    \t\treturn false\r\n    \tendif\r\n\r\n        if provokeTypes.isTypeActive[1] and IsUnitType( target, UNIT_TYPE_MECHANICAL) then\r\n        \t//call BJDebugMsg(\"type 1\")\r\n            return false\r\n        elseif provokeTypes.isTypeActive[2] and caster == target then\r\n        \t//call BJDebugMsg(\"type 2\")\r\n            return false\r\n        elseif provokeTypes.isTypeActive[3] and ( IsUnitType( target, UNIT_TYPE_HERO) or IsUnitType( target, UNIT_TYPE_ANCIENT) ) then \r\n        \t//call BJDebugMsg(\"type 3\")\r\n            return false\r\n        elseif provokeTypes.isTypeActive[4] and IsUnitType( target, UNIT_TYPE_HERO) == false then \r\n        \t//call BJDebugMsg(\"type 4\")\r\n            return false\r\n        elseif provokeTypes.isTypeActive[5] and IsUnitHealthIsFull(target) then \r\n        \t//call BJDebugMsg(\"type 5\")\r\n            return false\r\n        elseif provokeTypes.isTypeActive[6] and IsUnitHasAbility( target, 'Avul' ) then\r\n        \t//call BJDebugMsg(\"type 6\")\r\n            return false\r\n        elseif provokeTypes.isTypeActive[7] and GetUnitDefaultMoveSpeed(target) == 0 then \r\n        \t//call BJDebugMsg(\"type 7\")\r\n            return false\r\n        elseif provokeTypes.isTypeActive[8] and IsUnitHasAbility( target, 'A09H' ) then \r\n        \t//call BJDebugMsg(\"type 8\")\r\n            return false\r\n        endif\r\n        \r\n        return true\r\n    endfunction\r\n    \r\n    function randomtarget takes unit caster, real r, string str, integer checkType1, integer checkType2, integer checkType3 returns unit\r\n        //local integer i\r\n        //local integer k\r\n        local group correctUnits = CreateGroup()\r\n        local group g = CreateGroup()\r\n        local unit u\r\n        local ProvokeTypes provokeTypes = ProvokeTypes.create()\r\n\r\n\t\t//call BJDebugMsg(\"1\")\r\n        if str != \"ally\" and str != \"all\" and str != \"enemy\" then\r\n            call BJDebugMsg(\"An ability that was applied accidentally has an incorrect target. Please notify the developer about this.\")\r\n            set str = \"all\"\r\n        endif\r\n        //call BJDebugMsg(\"2\")\r\n        set provokeTypes.isTypeActive[checkType1] = true \r\n        set provokeTypes.isTypeActive[checkType2] = true \r\n        set provokeTypes.isTypeActive[checkType3] = true \r\n        \r\n        /*set i = 1\r\n        loop\r\n        \texitwhen i > 8\r\n        \tcall BJDebugMsg(\"provokeTypes.isTypeActive[\"+ I2S(i) + \"]: \" + B2S(provokeTypes.isTypeActive[i]))\r\n        \tset i = i + 1\r\n    \tendloop*/\r\n        \r\n\t\t//call BJDebugMsg(\"3\")\r\n        call GroupEnumUnitsInRange( g, GetUnitX( caster ), GetUnitY( caster ), r, null )\r\n        loop\r\n            set u = FirstOfGroup(g)\r\n            exitwhen u == null\r\n            if unitst( u, caster, str ) and IsCanBeTarget( caster, u, provokeTypes ) then\r\n                call GroupAddUnit( correctUnits, u )\r\n            endif\r\n            call GroupRemoveUnit(g,u)\r\n        endloop\r\n\t\t//call BJDebugMsg(\"4\")\r\n        set TempUnit = GroupPickRandomUnit( correctUnits )\r\n    \t\r\n    \t//call BJDebugMsg(\"5\")\r\n    \t\r\n        call DestroyGroup( g )\r\n        call DestroyGroup( correctUnits )\r\n        call provokeTypes.destroy()\r\n        set u = null\r\n        set g = null\r\n        set correctUnits = null\r\n        return TempUnit\r\n    endfunction\r\n    \r\nendlibrary",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}