{
  "Id": 50332335,
  "Comment": "",
  "IsScript": true,
  "RunOnMapInit": false,
  "Script": "library JuleLib requires ItemRandomizerLib\r\n\r\n    globals\r\n        constant integer ROW_LIMIT = 4\r\n        constant integer ROW_LIMIT_ARRAYS = ROW_LIMIT + 1\r\n        constant integer COLUMN_LIMIT = 4\r\n        constant integer COLUMN_LIMIT_ARRAYS = COLUMN_LIMIT + 1\r\n        \r\n        private constant integer ITEMS_COUNT = ROW_LIMIT*COLUMN_LIMIT\r\n        private constant integer ITEMS_COUNT_ARRAYS = ITEMS_COUNT + 1\r\n        \r\n        public string array Item_Name[ITEMS_COUNT_ARRAYS]\r\n        public string array Item_Description[ITEMS_COUNT_ARRAYS]\r\n        \r\n        private constant real DISCOUNT_MIN = 0.2\r\n        private constant integer DISCOUNT_CHANCE = 4\r\n        private constant real DISCOUNT = 0.3\r\n        \r\n        private constant integer SUPER_DISCOUNT_CHANCE = 1\r\n        private constant real SUPER_DISCOUNT = 0.6\r\n    endglobals\r\n\r\n    function JuleCast takes nothing returns nothing\r\n        local integer cyclA = 1\r\n        local integer cyclB = 1\r\n\r\n        call BlzFrameSetVisible( julerefr, true )\r\n        set cyclA = 1\r\n        loop\r\n            exitwhen cyclA > 4\r\n            set cyclB = 1\r\n            loop\r\n                exitwhen cyclB > 4\r\n                if cyclB < 3 or (cyclB >= 3 and julebool[cyclA][IMaxBJ(1,cyclB-2)]) then\r\n                    call BlzFrameSetVisible( juleicon[cyclA][cyclB], true )\r\n                endif\r\n                set cyclB = cyclB + 1\r\n            endloop\r\n            set cyclA = cyclA + 1\r\n        endloop \r\n\r\n        call FlushChildHashtable( udg_hash, GetHandleId( GetExpiredTimer() ) )\r\n    endfunction\r\n\r\n    function JulePause takes nothing returns nothing\r\n        local integer cyclA = 1\r\n        local integer cyclB = 1\r\n        \r\n        call BlzFrameSetVisible( julerefr, false )\r\n        set cyclA = 1\r\n        loop\r\n            exitwhen cyclA > 4\r\n            set cyclB = 1\r\n            loop\r\n                exitwhen cyclB > 4\r\n                if cyclB < 3 or (cyclB >= 3 and julebool[cyclA][IMaxBJ(1,cyclB-2)]) then\r\n                    call BlzFrameSetVisible( juleicon[cyclA][cyclB], false )\r\n                endif\r\n                set cyclB = cyclB + 1\r\n            endloop\r\n            set cyclA = cyclA + 1\r\n        endloop \r\n        \r\n        if LoadTimerHandle( udg_hash, 1, StringHash( \"jule\" ) ) == null  then\r\n            call SaveTimerHandle( udg_hash, 1, StringHash( \"jule\" ), CreateTimer() )\r\n        endif\r\n        call TimerStart( LoadTimerHandle( udg_hash, 1, StringHash( \"jule\" ) ), 0.25, false, function JuleCast )\r\n    endfunction\r\n\r\n    function PreCount takes nothing returns real\r\n        local integer cyclA = 1\r\n        local real count = 1\r\n        \r\n        loop\r\n            exitwhen cyclA > 4\r\n            if inv( udg_hero[cyclA], 'I01C' ) > 0 then\r\n                set count = count - 0.2\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        \r\n        set count = 1 - RMaxBJ(0,count)\r\n        return count\r\n    endfunction\r\n\r\n    function PreCount_Condition takes nothing returns boolean\r\n        local integer cyclA = 1\r\n        local boolean l = false\r\n        \r\n        loop\r\n            exitwhen cyclA > 4\r\n            if inv( udg_hero[cyclA], 'I01C' ) > 0 then\r\n                set l = true\r\n                set cyclA = 4\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        \r\n        return l\r\n    endfunction\r\n\r\n    function ChangeCost takes integer j, real count, integer number, boolean cond returns integer\r\n        local integer cost = j\r\n        \r\n        set cost = cost - R2I(count*j)\r\n        \r\n        if GetRandomInt(1,100) == SUPER_DISCOUNT_CHANCE then\r\n            set cost = cost - R2I(SUPER_DISCOUNT*j)\r\n        elseif GetRandomInt(1,100) <= DISCOUNT_CHANCE or (number == 1 and cond) then\r\n            set cost = cost - R2I(DISCOUNT*j)\r\n        endif\r\n        if udg_modbad[9] then\r\n            set cost = cost + R2I(0.1*j)\r\n        endif\r\n        \r\n        set cost = R2I(RMaxBJ(DISCOUNT_MIN*j, cost))\r\n        return cost\r\n    endfunction\r\n\r\n    function JuleRef takes nothing returns nothing\r\n        local integer cyclA\r\n        local integer cyclAEnd\r\n        local integer cyclB\r\n        local integer cyclBEnd\r\n        local integer cyclC\r\n        local integer h = 8+IMinBJ(4,julenum)\r\n        local integer array rarity\r\n        local integer rand\r\n        local integer array i\r\n        local boolean l\r\n        local integer j\r\n        local integer m\r\n        local integer f\r\n        local integer legrarity = R2I(udg_RarityChance[3]/2)\r\n        local string str\r\n        \r\n        local real preCount\r\n        local boolean preCountBool\r\n        \r\n        call JulePause()\r\n        call DestroyEffect( AddSpecialEffect( \"Abilities\\\\Spells\\\\Human\\\\Polymorph\\\\PolyMorphDoneGround.mdl\", GetUnitX( udg_UNIT_JULE ), GetUnitY( udg_UNIT_JULE ) ) )\r\n        \r\n        set cyclA = 1\r\n        loop\r\n            exitwhen cyclA > 16\r\n            set udg_JuleItem[cyclA] = 0\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        \r\n        set cyclA = 1\r\n        loop\r\n            exitwhen cyclA > h\r\n            set rarity[cyclA] = 0\r\n            set rand = GetRandomInt(1, 100)\r\n            if rand <= legrarity then\r\n                set rarity[cyclA] = 3\r\n            elseif rand > legrarity and rand <= udg_RarityChance[2] then\r\n                set rarity[cyclA] = 2\r\n            elseif rand > udg_RarityChance[2] then\r\n                set rarity[cyclA] = 1\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set i[1] = GetRandomInt(1, udg_Database_NumberItems[rarity[1]])\r\n        set cyclA = 2\r\n        loop\r\n            exitwhen cyclA > h\r\n            set f = rarity[cyclA]\r\n            set i[cyclA] = GetRandomInt(1, udg_Database_NumberItems[f])\r\n            if not(udg_Dublicate) then\r\n                set cyclB = 1\r\n                set cyclBEnd = cyclA - 1\r\n                loop\r\n                    exitwhen cyclB > cyclBEnd\r\n                    if i[cyclA] == i[cyclB] and f == rarity[cyclB] and f != 0 then\r\n                        set cyclA = cyclA - 1\r\n                        set cyclB = cyclBEnd\r\n                    endif\r\n                    set cyclB = cyclB + 1\r\n                endloop\r\n            endif\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        set cyclA = 1\r\n        loop\r\n            exitwhen cyclA > h\r\n            set f = rarity[cyclA]\r\n            set m = 0\r\n            set cyclB = 1\r\n            loop\r\n                exitwhen cyclB > 1\r\n                set l = false\r\n                set j = DB_Items[f][i[cyclA]]\r\n                set cyclC = 1\r\n                loop\r\n                    exitwhen cyclC > 4\r\n                    if inv( udg_hero[cyclC], j ) > 0 then\r\n                        set l = true\r\n                        set cyclC = 4\r\n                    endif\r\n                    set cyclC = cyclC + 1\r\n                endloop\r\n                set cyclC = 1\r\n                loop\r\n                    exitwhen cyclC > h\r\n                    if j == udg_JuleItem[cyclC] then\r\n                        set l = true\r\n                        set cyclC = h\r\n                    endif\r\n                    set cyclC = cyclC + 1\r\n                endloop\r\n                if l and not(udg_Dublicate) and m < 10 then\r\n                    if i[cyclA] != 1 then\r\n                        set i[cyclA] = i[cyclA] - 1\r\n                        set m = m + 1\r\n                    else\r\n                        set i[cyclA] = udg_Database_NumberItems[f]\r\n                    endif\r\n                    set cyclB = cyclB - 1\r\n                else\r\n                    set udg_JuleItem[cyclA] = j\r\n                endif\r\n                set cyclB = cyclB + 1\r\n            endloop\r\n            set cyclA = cyclA + 1\r\n        endloop\r\n        \r\n        if julenum >= 5 then\r\n            set h = julenum - 4\r\n            \r\n            set cyclA = 1\r\n            loop\r\n                exitwhen cyclA > h\r\n                set m = 0\r\n                set cyclB = 1\r\n                loop\r\n                    exitwhen cyclB > 1\r\n                    set rand = GetRandomInt(1,9)\r\n                    set l = false\r\n                    set j = DB_SetItems[rand][GetRandomInt(1,udg_DB_SetItems_Num[rand])]\r\n                    set cyclC = 1\r\n                    loop\r\n                        exitwhen cyclC > 4\r\n                        if inv( udg_hero[cyclC], j ) > 0 then\r\n                            set l = true\r\n                            set cyclC = 4\r\n                        endif\r\n                        set cyclC = cyclC + 1\r\n                    endloop\r\n                    set cyclC = 1\r\n                    loop\r\n                        exitwhen cyclC > 12+h\r\n                        if j == udg_JuleItem[cyclC] then\r\n                            set l = true\r\n                            set cyclC = 12+h\r\n                        endif\r\n                        set cyclC = cyclC + 1\r\n                    endloop\r\n                    if l and not(udg_Dublicate) and m < 30 then\r\n                        set cyclB = cyclB - 1\r\n                    else\r\n                        set udg_JuleItem[12+cyclA] = j\r\n                    endif\r\n                    set cyclB = cyclB + 1\r\n                endloop\r\n                set cyclA = cyclA + 1\r\n            endloop\r\n        endif\r\n        \r\n        set f = 0\r\n        set cyclB = 1\r\n        set preCount = PreCount()\r\n        set preCountBool = PreCount_Condition()\r\n        loop\r\n            exitwhen cyclB > 4\r\n            set cyclA = 1\r\n            loop\r\n                exitwhen cyclA > 4\r\n                set f = f + 1\r\n                if udg_JuleItem[f] != 0 then\r\n                    set bj_lastCreatedItem = CreateItem(udg_JuleItem[f], 0, 0 )\r\n                    \r\n                    set j = 0\r\n                    set str = \"\"\r\n                    if GetItemType(bj_lastCreatedItem) == ITEM_TYPE_PERMANENT then\r\n                        set j = 500\r\n                    elseif GetItemType(bj_lastCreatedItem) == ITEM_TYPE_CAMPAIGN then\r\n                        set j = 750\r\n                    elseif GetItemType(bj_lastCreatedItem) == ITEM_TYPE_ARTIFACT then\r\n                        set j = 1000\r\n                    endif\r\n                    set m = j\r\n                    set j = ChangeCost(j, preCount, f, preCountBool)\r\n                    \r\n                    if j <= (0.45*m) then\r\n                        set str = \"|cFFFF4646\"\r\n                    elseif j <= (0.75*m) then\r\n                        set str = \"|cFFFE9050\" \r\n                    elseif j > m then\r\n                        set str = \"|cFFBCC0C3\"\r\n                    endif\r\n                    set julecost[cyclA][cyclB] = j\r\n                    call BlzFrameSetText( juletext[cyclA][cyclB], str+I2S(j)+\" G|r\" )\r\n                    \r\n                    set str = BlzGetItemDescription(bj_lastCreatedItem)\r\n                    call BlzFrameSetTexture( juleicon[cyclA][cyclB], BlzGetItemIconPath(bj_lastCreatedItem), 0, true )\r\n                    //call BlzFrameSetSize( julediscback[cyclA][cyclB], 0.35, StringSizeStableTool(str) )\r\n                    //call BlzFrameSetText( julename[cyclA][cyclB], GetItemName(bj_lastCreatedItem) )\r\n                    //call BlzFrameSetText( juledisc[cyclA][cyclB], str )\r\n                    set Item_Name[f] = GetItemName(bj_lastCreatedItem)\r\n                    set Item_Description[f] = str\r\n                    call RemoveItem(bj_lastCreatedItem)\r\n                endif\r\n                set cyclA = cyclA + 1\r\n            endloop\r\n            set cyclB = cyclB + 1\r\n        endloop \r\n    endfunction\r\n\r\nendlibrary",
  "Events": [],
  "LocalVariables": [],
  "Conditions": [],
  "Actions": []
}